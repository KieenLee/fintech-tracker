version: "3.8"

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: fintech-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./Fintech_DB.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - fintech-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  # Backend API
  backend:
    build:
      context: ./fintechtracker-backend
      dockerfile: Dockerfile
    container_name: fintech-backend
    restart: unless-stopped
    environment:
      # Core Settings
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:8082
      - TZ=${TZ}

      # Database Connection
      - ConnectionStrings__DefaultConnection=Server=mysql;Database=${MYSQL_DATABASE};Uid=${MYSQL_USER};Pwd=${MYSQL_PASSWORD};Port=3306;AllowUserVariables=True;UseAffectedRows=False;

      # JWT Configuration
      - JWT__Key=${JWT_KEY}
      - JWT__Issuer=${JWT_ISSUER}
      - JWT__Audience=${JWT_AUDIENCE}
      - JWT__ExpireMinutes=${JWT_EXPIRE_MINUTES}

      # Telegram Configuration
      - Telegram__BotToken=${TELEGRAM_BOT_TOKEN}
      - Telegram__WebhookUrl=${TELEGRAM_WEBHOOK_URL}

      # Google Auth Configuration
      - GoogleAuth__ClientId=${GOOGLE_CLIENT_ID}
      - GoogleAuth__ClientSecret=${GOOGLE_CLIENT_SECRET}

      # Email Settings
      - EmailSettings__SmtpServer=${SMTP_HOST}
      - EmailSettings__SmtpPort=${SMTP_PORT}
      - EmailSettings__SenderEmail=${SMTP_FROM_EMAIL}
      - EmailSettings__SenderPassword=${SMTP_PASSWORD}
      - EmailSettings__SenderName=${SMTP_FROM_NAME}

      # OTP Settings
      - OtpSettings__ExpiryMinutes=${OTP_EXPIRY_MINUTES}
      - OtpSettings__Length=${OTP_LENGTH}
      - OtpSettings__MaxAttempts=${OTP_MAX_ATTEMPTS}
      - OtpSettings__MaxRequestsPerHour=${OTP_MAX_REQUESTS_PER_HOUR}

      # File Upload Settings
      - FileUpload__MaxSizeInMB=${FILE_UPLOAD_MAX_SIZE_MB}
      - FileUpload__AllowedExtensions=${FILE_UPLOAD_ALLOWED_EXTENSIONS}
      - FileUpload__UploadPath=${FILE_UPLOAD_PATH}

      # Other Settings
      - AllowedHosts=${ALLOWED_HOSTS}

    ports:
      - "5013:8082"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - fintech-network
    volumes:
      - ./uploads:/app/wwwroot/uploads
      - ./avatars:/app/wwwroot/avatars
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/api/health"]
      timeout: 10s
      retries: 3
      start_period: 60s
      interval: 30s

  # Frontend
  frontend:
    build:
      context: ./fintechtracker-frontend
      dockerfile: Dockerfile
    container_name: fintech-frontend
    restart: unless-stopped
    environment:
      - TZ=${TZ}
    ports:
      - "3000:8083"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/"]
      timeout: 10s
      retries: 3
      start_period: 30s
      interval: 30s

volumes:
  mysql_data:
    driver: local

networks:
  fintech-network:
    driver: bridge
    name: fintech_network
